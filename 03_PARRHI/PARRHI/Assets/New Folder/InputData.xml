<?xml version="1.0"?>
<InputData xmlns="PARRHI">
	<Variables>
		<Int name="var1">0</Int>
	</Variables>
	<Points>
		<!--Robot points to show the actual robot-->
		<PointRobot name="Point1" J1="0" J2="1" Scale="0" />
		<PointRobot name="Point2" J1="1" J2="2" Scale="0" />
		<PointRobot name="Point3" J1="2" J2="3" Scale="0" />
		<PointRobot name="Point4" J1="3" J2="4" Scale="0" />
		<PointRobot name="Point5" J1="4" J2="5" Scale="0" />
		<PointRobot name="Point6" J1="5" J2="5" Scale="0" />

		<!--Fence joints-->
		<PointFix name="Point7" X="700" Y="0" Z = "700"/>
		<PointFix name="Point8" X="700" Y="0" Z = "-700"/>
		<PointFix name="Point9" X="-700" Y="0" Z = "-700"/>
		<PointFix name="Point10" X="-700" Y="0" Z = "700"/>
		
		<PointFix name="Point11" X="700" Y="1400" Z = "700"/>
		<PointFix name="Point12" X="700" Y="1400" Z = "-700"/>
		<PointFix name="Point13" X="-700" Y="1400" Z = "-700"/>
		<PointFix name="Point14" X="-700" Y="1400" Z = "700"/>
		
		
		<PointFix name="Point15" X="0" Y="740" Z = "500"/>
		<PointRobot name="Point16" J1="3" J2="4" Scale="0.75" />
	</Points>
	<Holograms>
		<Sphere name="Sphere1" point="Point1" radius="90"/>
		<Sphere name="Sphere2" point="Point2" radius="80"/>
		<Sphere name="Sphere3" point="Point3" radius="70"/>
		<Sphere name="Sphere4" point="Point4" radius="40"/>
		<Sphere name="Sphere5" point="Point5" radius="20"/>
		<Sphere name="Sphere6" point="Point6" radius="20"/>
		
		<Zylinder name="Zylinder1" point1="Point1" point2="Point2" radius="90"/>
		<Zylinder name="Zylinder2" point1="Point2" point2="Point3" radius="70"/>
		<Zylinder name="Zylinder3" point1="Point3" point2="Point4" radius="70"/>
		<Zylinder name="Zylinder4" point1="Point4" point2="Point5" radius="40"/>
		<Zylinder name="Zylinder5" point1="Point5" point2="Point6" radius="20"/>
		
		<Sphere name="Sphere7" point="Point15" radius="50" renderMode="transparent"/>
		
		<!--Uncomment this to demonstrate Zylinder placement-->
		<!--
		<Zylinder name="Zylinder6" point1="Point7" point2="Point8" radius="20"/>
		<Zylinder name="Zylinder7" point1="Point8" point2="Point9" radius="20"/>
		<Zylinder name="Zylinder8" point1="Point9" point2="Point10" radius="20"/>
		<Zylinder name="Zylinder9" point1="Point10" point2="Point7" radius="20"/>
		
		<Zylinder name="Zylinder10" point1="Point11" point2="Point12" radius="20"/>
		<Zylinder name="Zylinder11" point1="Point12" point2="Point13" radius="20"/>
		<Zylinder name="Zylinder12" point1="Point13" point2="Point14" radius="20"/>
		<Zylinder name="Zylinder13" point1="Point14" point2="Point11" radius="20"/>
		
		<Zylinder name="Zylinder14" point1="Point7" point2="Point11" radius="20"/>
		<Zylinder name="Zylinder15" point1="Point8" point2="Point12" radius="20"/>
		<Zylinder name="Zylinder16" point1="Point9" point2="Point13" radius="20"/>
		<Zylinder name="Zylinder17" point1="Point10" point2="Point14" radius="20"/>-->
	</Holograms>
	<Events>
		<Trigger>
		<!--1. Distance Trigger activates the Time trigger and sets the ui Text to "Step 1"-->
		<!--2. Time Trigger triggers after 5 seconds and resets itself and increments var1-->
		<!--3. At some point var1 Reaches the VarTrigger's triggerValue, which then triggers. It stops the timer and sets the ui text to "Step 2"-->
		
			<!--Distance Trigger Demo-->
			<DistanceTrigger name="Trigger1" canTrigger='true' point1="Point15" point2="Point6" action1="Handler1" action2="Handler2" distance="50" />
			
			<TimeTrigger name="Trigger2" canTrigger='false' timeSinceActivation="5"  action1="Handler2" action2="Handler3"/>
			<VarTrigger name="Trigger3" canTrigger='true' varName="var1" triggerValue="3" action1="Handler4" action2="Handler5" />
		</Trigger>
		<Actions>
			<!--Demo of Distance trigger-->
			<ChangeUITextAction name="Handler1" text="Step1:\nThis trigger sets the UI to this text, if the distance trigger triggers"/>
			<SetTriggerStateAction name="Handler2" triggerName="Trigger2" canTrigger='true'/>
			<IncrementCounterAction name="Handler3" intVar="var1"/>
			<ChangeUITextAction name="Handler4" text="Step2:\nTime trigger triggered twice, now the varTrigger set this text and disabled the timer"/>
			<SetTriggerStateAction name="Handler5" triggerName="Trigger2" canTrigger='false'/>
			
			
			<!--<IncrementCounterAction name="Handler1" intVar="var1"/>
			<ChangeUITextAction name="Handler2" text="This trigger sets the UI to this text, if the var trigger triggers"/>
			<SetTriggerStateAction name="Handler4" triggerName="Trigger2" canTrigger='false'/>-->
		</Actions>
	</Events>
	<!--Remove this to demonstrate XML Validation-->
	<UIText name="UniqueText" text="Content"/>
</InputData>